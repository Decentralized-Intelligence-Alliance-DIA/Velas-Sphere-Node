syntax = "proto3";

package resources;

service Storage {
    rpc SaveFile (FileStorageRequest) returns (FileStorageResponse) {}
    rpc VerifyFileStorage (FileStorageVerificationRequest) returns (FileStorageVerificationResponse) {}
    rpc GetFileBack (GetFileBackRequest) returns (GetFileBackResponse) {}
}

message FileStorageRequest {
    // TODO: contract link/id/whatever with the same public key and with another verifiable signature
    string name = 1;  // formatted id string
    string target = 2;  // formatted target/url string
    bytes  requesterPublicKey = 3; // base64 or raw data?
    bytes  data = 4; // base64 or raw data?
    bytes  merkleTreeRoot = 5; // json blob
}

message FileStorageResponse {
    string id = 1;  // formatted id string
    bytes  getBackToken = 2; // hex, base64 or raw string
    bytes  verificationToken = 3; // hex, base64 or raw string
}

message FileStorageVerificationRequest {
    string id = 1;  // formatted id string
    bytes  challenge = 2;  // hex, base64 or raw string
    bytes verificationTokenSignature = 3;  // hex, base64 or raw string
}

message FileStorageVerificationResponse {
    string id = 1; // formatted id string
    string path = 2;  // formatted path string
    bytes  newVerificationToken = 3;  // hex, base64 or raw string
}

// TODO: add final verification?

message GetFileBackRequest {
    string id = 1; // formatted id string
    bytes  getBackTokenSignature = 2;  // hex, base64 or raw string
}

message GetFileBackResponse {
    string id = 1;  // formatted id string
    string invoiceID = 2; // formatted invoice id string
    bytes  data = 3; // // base64 or raw data?
}